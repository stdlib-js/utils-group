// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-index-of@esm/index.mjs";var i=e,o=n,a=s,u=r,l=["values","indices","*"];var m=n;var d=n;var h=n;var g=t,p=r,f=function(t,r){return i(r)?o(r,"returns")&&(t.returns=r.returns,-1===a(l,t.returns))?new TypeError(u('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"returns",l.join('", "'),t.returns)):null:new TypeError(u("invalid argument. Options argument must be an object. Value: `%s`.",r))},v=function(t,r){var e,n,s,i;for(n=t.length,e={},i=0;i<n;i++)s=r[i].toString(),m(e,s)?e[s].push(t[i]):e[s]=[t[i]];return e},c=function(t,r){var e,n,s,i;for(n=t.length,e={},i=0;i<n;i++)s=r[i].toString(),d(e,s)?e[s].push(i):e[s]=[i];return e},j=function(t,r){var e,n,s,i;for(n=t.length,e={},i=0;i<n;i++)s=r[i].toString(),h(e,s)?e[s].push([i,t[i]]):e[s]=[[i,t[i]]];return e};var b=function(t,r,e){var n,s,i;if(!g(t))throw new TypeError(p("invalid argument. First argument must be a collection. Value: `%s`.",t));if(n={returns:"values"},2===arguments.length)i=r;else{if(s=f(n,r))throw s;i=e}if(!g(i))throw new TypeError(p("invalid argument. Last argument must be a collection. Value: `%s`.",i));if(t.length!==i.length)throw new RangeError("invalid arguments. First and last arguments must be the same length.");return"values"===n.returns?v(t,i):"indices"===n.returns?c(t,i):j(t,i)};export{b as default};
//# sourceMappingURL=index.mjs.map
